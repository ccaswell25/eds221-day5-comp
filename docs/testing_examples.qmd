---
title: "testing-functions"
format: html
editor: visual
---

```{r}
library(testthat)
```

## Function Testing 

Write a function

```{r}
#We're calculating the means across columns in a dataframe. We can use apply to say apply something to all of the columns (margin=2) in this dataframe. Then find the max and min of those means. Then I want to return a vector that contains the min and max.

mean_range <- function(df){
  col_means <- apply(X = df,MARGIN = 2, FUN = mean, na.rm = TRUE)
  col_mean_max <- max(col_means)
  col_mean_min <- min(col_means)
  return(c(col_mean_min, col_mean_max))
}
```

```{r}
#Let's try out the function on a few dataframes:
mean_range(mtcars)
mean_range(faithful)
```

Write some unit tests using testthat(). First make sure you attach the package at the top. We need to give it an example to test. In this example we use mtcars.

```{r}
expect_length(mean_range(mtcars), 2)
```

```{r}
expect_type(mean_range(mtcars), "double")
```

```{r}
expect_true(mean_range(mtcars)[1] <= mean_range(mtcars)[2])
```

How can we reference a function we created somewhere else in our working directory? We need to use the here() function to tell it where our function lives, which is in the "src" folder. Then we can use the source function to reference it and use it in a different file.

```{r}
source(here::here("src", "name_cart.R"))
```

```{r}
name_cart(food = "enchilada", animal = "bunny")
```

```{r}
source(here::here("src", "cork_oak_growth.R"))
height_t2(height_t1 = 35, t1 = 3, t2 = 6)
```
